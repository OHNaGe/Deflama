<?xml version="1.0" encoding="utf-8" ?><MONK><Ability><Name>[SPELL] Renewing Mist</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_RenewingMistCheck or Nova_SpamRenewingMistCheck then
	if PQR_SpellAvailable(115151) 
	and IsUsableSpell(115151)
	and select(2,GetSpellCooldown(115151)) &amp;lt; 2 
	and not UnitBuffID(&amp;quot;player&amp;quot;,101546)
	and not UnitBuffID(&amp;quot;player&amp;quot;, 139597)
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523))
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952))
	then
		if members[1].HP &amp;lt;= Nova_RenewingMistTank then
			PRGetDistanceTablebuff(Nova_RenewingMistTank, 40, 2, 115151)	
			PRGetDistanceTablebyHPbuff(Nova_RenewingMistTank,2)					
			if IsSpellInRange(GetSpellInfo(115151),prdistancebyhpbuff[1].Unit) 
			and (prdistancebyhpbuff[1].PD &amp;gt;= 2) then
				if (UnitThreatSituation(prdistancebyhpbuff[1].Unit) == 3 and prdistancebyhpbuff[1].HP &amp;lt;= Nova_RenewingMistTank) or prdistancebyhpbuff[1].HP &amp;lt;= Nova_RenewingMist 
				and not UnitCastingInfo(&amp;quot;player&amp;quot;) then			
					CastSpellByName(tostring(GetSpellInfo(115151)),prdistancebyhpbuff[1].Unit)					
					return true
				end	
			end			
		end
		
		if Nova_SpamRenewingMistCheck 
		and not UnitBuffID(members[1].Unit,115151,&amp;quot;player&amp;quot;)	
		and IsSpellInRange(GetSpellInfo(115151),members[1].Unit) 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;)
		then
			CastSpellByName(tostring(GetSpellInfo(115151)),members[1].Unit)				
			return true				
		end										
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[BUFF] Jade Serpent Statue</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_JadeSerpentStatueCheck then	
	if (DeflamaMistMonk_JadeSerpentStatue_key and not GetCurrentKeyBoardFocus()) then
		if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
		and IsUsableSpell(115313) 
		and PQR_SpellAvailable(115313)
		and select(2,GetSpellCooldown(115313)) &amp;lt; 2 
		and not UnitCastingInfo(&amp;quot;player&amp;quot;)
		then
		  CastSpellByName(tostring(GetSpellInfo(115313),nil))
		  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end
		  return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SPELL] Touch of Death</Name><Default>false</Default><SpellID>115080</SpellID><Actions></Actions><Lua>local spell, unit = 115080, &amp;quot;target&amp;quot;
if SIN_CanCast(spell, unit) then
	if not UnitPlayerControlled(unit) then
		if UnitHealth(unit) &amp;lt;= UnitHealth(&amp;quot;player&amp;quot;) then
			SIN_Cast(spell, target)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SPELL] Mana Tea</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_ManaTeaCheck then
	if PQR_SpellAvailable(115294)
	and not UnitBuffID(&amp;quot;player&amp;quot;, 137331)
	and not UnitBuffID(&amp;quot;player&amp;quot;, 139597) then
		if UnitBuffID(&amp;quot;player&amp;quot;, 115867) then
			if (select(4, UnitBuffID(&amp;quot;player&amp;quot;, 115867)) &amp;gt;= Nova_ManaTeaLimit and select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt;= Nova_ManaTea)	 
			 or UnitBuffID(&amp;quot;player&amp;quot;,64904) 
			 and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
			 	if GlyphCheck(123763) then --124450					
					if select(2,GetSpellCooldown(123761)) &amp;lt; 2												
					then
				 		CastSpellByName(tostring(GetSpellInfo(123761)),&amp;quot;player&amp;quot;)	
				 		return true
				 	end			 	
			 	else					
				 	CastSpellByName(tostring(GetSpellInfo(115294)),&amp;quot;player&amp;quot;)	
				 	return true			 	
			 	end
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SPELL] Chi Brew</Name><Default>false</Default><SpellID>115399</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(115399)
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and not UnitBuffID(&amp;quot;player&amp;quot;, 137331)
and not UnitBuffID(&amp;quot;player&amp;quot;, 139597)
and UnitPower(&amp;quot;player&amp;quot;, 12) &amp;lt;= 2 then
	return true
end</Lua><RecastDelay>5000</RecastDelay><Target>Player</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>- DATA -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if PQR_RotationStarted == true then
	-- Should be reloaded every time you reload Profile (No more needing to /rl)
 	-- Only takes full effects when we&amp;apos;re 90
 	if UnitLevel(&amp;quot;player&amp;quot;) ~= 90 then
 		PQR_WriteToChat(&amp;quot;\124cFFFF55FFWarning: only takes full effect when we&amp;apos;re 90!&amp;quot;)		
 	end	
	PQR_RotationStarted = false

	PQR_Event(&amp;quot;PQR_Text&amp;quot;, &amp;quot;Lightning Weaver v0.1.1&amp;quot;, nil, &amp;quot;00FF00&amp;quot;)
	PQR_SwapCheckTimer = 0

	--Begin PQI
	if (IsAddOnLoaded(&amp;quot;PQInterface&amp;quot;)) == 1 then
		PQInterfaceLoaded = true
		PQInterfaceVersion = (tonumber(GetAddOnMetadata(&amp;quot;PQInterface&amp;quot;, &amp;quot;Version&amp;quot;)))
		if PQInterfaceVersion &amp;gt;= 2.22 then
			PQInterfaceUpdated = true
		else 
			PQInterfaceUpdated = nil 
			PQR_WriteToChat(&amp;quot;Your PQI is not up to date. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true					
		end
	else 
		PQInterfaceLoaded = nil 
		PQR_WriteToChat(&amp;quot;Please download the latest version of PQI. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
		PQR_StopRotation()
		return true				
	end
		-- Load Data File
	if PQR_LoadLua ~= nil then
		if PQR_LoadLua(&amp;quot;PQR_Deflama_Data.lua&amp;quot;) == false then
			PQR_WriteToChat(&amp;quot;You are missing PQR_Deflama_Data.lua. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true
		end
		if PQR_LoadLua(&amp;quot;PQR_PQI.lua&amp;quot;) == true then
			PQInterfaceDataLoaded = true
		else 
			PQInterfaceDataLoaded = false 
			PQR_WriteToChat(&amp;quot;You are missing PQR_PQI.lua. Rotation has been stopped.&amp;quot;, &amp;quot;Error&amp;quot;)
			PQR_StopRotation()
			return true		
		end		
	end	
	
	if not PQI_General_Mist_Monk_GUI_Loaded 
	and PQInterfaceLoaded 
	and PQInterfaceUpdated 
	and PQInterfaceDataLoaded then 	
		local config = {
			name	= &amp;apos;General Mist Monk&amp;apos;,
			author	= &amp;apos;Deflama&amp;apos;,
			abilities = {
				-- General --
				{	name = &amp;quot;Auto Open PQI Options&amp;quot;,
					tooltip = &amp;quot;Auto Opens PQI Options for you, will only happen once per login.&amp;quot;,
					enable = true,
				},
				{	name = &amp;quot;54 Events&amp;quot;,
					tooltip = &amp;quot;Enables the use of 5.4 boss specific mechanics&amp;quot;,
					enable = true,
				},				
				{	name = &amp;quot;53 Events&amp;quot;,
					tooltip = &amp;quot;Enables the use of 5.3 boss specific mechanics&amp;quot;,
					enable = false,
				},
				{ 	name = &amp;quot;4x Events&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of 4.x boss specific mechanics&amp;quot;,
				},
				{ 	name = &amp;quot;Special Events&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of special events mechanics (Providing Ground...)&amp;quot;,
				},	
				{ 	name = &amp;quot;Spam Renewing Mist&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Will use Renewing Mist on CD&amp;quot;,
				},				
				{ 	name = &amp;quot;Racials&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Racials&amp;quot;,
				},								
				{ 	name = &amp;quot;NPC Mouseover Heal&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the use of NPC Mouseover Heal priority&amp;quot;,
				},					
			},
			hotkeys = {
			},
		}
		PQI_General_Mist_Monk_GUI_Loaded = PQI:AddRotation(config)
	end

	if not PQI_CD_Mist_Monk_GUI_Loaded 
	and PQInterfaceLoaded 
	and PQInterfaceUpdated 
	and PQInterfaceDataLoaded then 
		local config = {
			name	= &amp;apos;CD Mist Monk&amp;apos;,
			author	= &amp;apos;Deflama&amp;apos;,
			abilities = {									
				-- CD&amp;apos;s --
				{ 	name = &amp;quot;Life Cocoon&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Life Cocoon&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 20,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Life Cocoon at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;VSpinning CKick&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Enables the auto use of Spinning CKick&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 70,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Spinning CKick at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;VSpinning CKick Limit&amp;quot;,
					enable = false,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 3,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The number of raid members around healing target to use Spinning CKick at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Rushing Jade Wind&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the auto use of Rushing Jade Wind&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 80,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Rushing Jade Wind at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;Rushing Jade Wind Limit&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 3,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The number of raid members around healing target to use Rushing Jade Wind at&amp;quot;,
					},
				},							
				{ 	name = &amp;quot;Revival&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Revival&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 60,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Revival at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Revival Limit&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 4,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The number of raid members around healing target to use Revival at&amp;quot;,
					},
				},	
			},
			hotkeys = {
			},
		}
		PQI_CD_Mist_Monk_GUI_Loaded = PQI:AddRotation(config)
	end
	
	if not PQI_Healing_Mist_Monk_GUI_Loaded 
	and PQInterfaceLoaded 
	and PQInterfaceUpdated 
	and PQInterfaceDataLoaded then 
		local config = {
			name	= &amp;apos;Healing Mist Monk&amp;apos;,
			author	= &amp;apos;Deflama&amp;apos;,
			abilities = {																	
				-- Healing --
				{
					name = &amp;quot;Detox&amp;quot;,
					newSection = true,
					enable = false,
					widget = { type = &amp;apos;select&amp;apos;, 
						values = { &amp;quot;mouseover&amp;quot;, &amp;quot;target&amp;quot;, &amp;quot;focus&amp;quot;, },
						value = 1,
						width = 75,
					},
				},
				{ 	name = &amp;quot;Mana Tea&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Mana Tea&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 90,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of Mana to use Mana Tea at&amp;quot;,
					},
				},
				{ 	name = &amp;quot;Mana Tea Limit&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 5,
						step = 1,
						max = 20,
						min = 0,
						tooltip = &amp;quot;The number of stacks to use Mana Tea at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Renewing Mist&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Renewing Mist&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 95,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Renewing Mist at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Renewing Mist Tank&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Renewing Mist on Tanks&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 99,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Renewing Mist on Tanks at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Surging Mist Instant&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Surging Mist Instant&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 70,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Surging Mist Instant at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Uplift&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of Uplift&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 90,
						step = 1,
						max = 100,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use Uplift at&amp;quot;,
					},
				},	
				{ 	name = &amp;quot;Uplift Count&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Not work&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 3,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The number of ReMs to use Uplift at&amp;quot;,
					},
				},				
				{ 	name = &amp;quot;TFTea Uplift&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of TFTea + Uplift&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 4,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use TFTea + Uplift at&amp;quot;,
					},
				},		
				{ 	name = &amp;quot;TFT ReM&amp;quot;,
					enable = true,
					tooltip = &amp;quot;Enables the use of TFT + ReM&amp;quot;,
					widget = { type = &amp;apos;numBox&amp;apos;,
						value = 6,
						step = 1,
						max = 10,
						min = 0,
						tooltip = &amp;quot;The percent of HP to use TFT + ReM at&amp;quot;,
					},
				},										
			},
			hotkeys = {
				{	name = &amp;quot;Pause Rotation&amp;quot;,		enable = true,	hotkeys = {&amp;apos;ls&amp;apos;},	},
				{	name = &amp;quot;Jade Serpent Statue&amp;quot;,		enable = true,	hotkeys = {&amp;apos;lc&amp;apos;},
					tooltip = &amp;quot;Use Jade Serpent Statue at mouseover&amp;quot;, },
				{	name = &amp;quot;Healing Sphere&amp;quot;,			enable = true,	hotkeys = {&amp;apos;ra&amp;apos;},	
					tooltip = &amp;quot;Use Healing Sphere at mouseover&amp;quot;, },
				{	name = &amp;quot;Spinning Crane Kick&amp;quot;,		enable = true,	hotkeys = {&amp;apos;rc&amp;apos;},	
					tooltip = &amp;quot;Spinning Crane Kick&amp;quot;, },							
				{	name = &amp;quot;Zen Meditation&amp;quot;,		enable = true,	hotkeys = {&amp;apos;ls&amp;apos;,&amp;apos;ra&amp;apos;},	
					tooltip = &amp;quot;Pop Zen Meditation&amp;quot;, },												
			},
		}
		PQI_Healing_Mist_Monk_GUI_Loaded = PQI:AddRotation(config)
	end
	
	PQR_ResetMovementTime = 0.3
	PQR_SpellAvailableTime = ((select(3,GetNetStats()) + select(4,GetNetStats())) / 1000)
	
	PQR_Spec = GetSpecialization()
	if PQR_Spec ~= 2 then
		PQR_WriteToChat(&amp;quot;You must be in Mist Spec. Please switch then try again.&amp;quot;, &amp;quot;Warning&amp;quot;)
		PQR_StopRotation()
		return true
	end
end

if PQR_IsMoving() then
	Nova_Moving = true
else
	Nova_Moving = false
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>- PAUSE -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if (DeflamaMistMonk_PauseRotation_key and not GetCurrentKeyBoardFocus())
or UnitIsDeadOrGhost(&amp;quot;player&amp;quot;) 
or (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(115176)) --Zen Meditation
or IsMounted()
or UnitBuffID(&amp;quot;player&amp;quot;, 104269) then --drink
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>- PQI VARIABLES -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>-- Variables
if PQInterfaceLoaded and PQInterfaceUpdated and PQInterfaceDataLoaded then
	--They have PQI and its up-to-date use PQI
	
	PQI_Variables_Loaded = PQI_DeflamaGeneralMistMonk_AutoOpenPQIOptions_enable
	DeflamaMistMonk_AutoOpenPQIOptions_enable = PQI_DeflamaGeneralMistMonk_AutoOpenPQIOptions_enable

	Nova_DetoxCheck = PQI_DeflamaHealingMistMonk_Detox_enable
	Nova_Detox = PQI_DeflamaHealingMistMonk_Detox_value
	Nova_ManaTeaCheck = PQI_DeflamaHealingMistMonk_ManaTea_enable
	Nova_ManaTea = PQI_DeflamaHealingMistMonk_ManaTea_value
	Nova_ManaTeaLimitCheck = PQI_DeflamaHealingMistMonk_ManaTeaLimit_enable
	Nova_ManaTeaLimit = PQI_DeflamaHealingMistMonk_ManaTeaLimit_value		
	Nova_RenewingMistCheck = PQI_DeflamaHealingMistMonk_RenewingMist_enable
	Nova_RenewingMist = PQI_DeflamaHealingMistMonk_RenewingMist_value
	Nova_RenewingMistTankCheck = PQI_DeflamaHealingMistMonk_RenewingMistTank_enable
	Nova_RenewingMistTank = PQI_DeflamaHealingMistMonk_RenewingMistTank_value
	Nova_SurgingMistInstantCheck = PQI_DeflamaHealingMistMonk_SurgingMistInstant_enable
	Nova_SurgingMistInstant = PQI_DeflamaHealingMistMonk_SurgingMistInstant_value
	Nova_UpliftCheck = PQI_DeflamaHealingMistMonk_Uplift_enable
	Nova_Uplift = PQI_DeflamaHealingMistMonk_Uplift_value
	Nova_UpliftCountCheck = PQI_DeflamaHealingMistMonk_UpliftCount_enable
	Nova_UpliftCount = PQI_DeflamaHealingMistMonk_UpliftCount_value	
	Nova_TFTeaUpliftCheck = PQI_DeflamaHealingMistMonk_TFTeaUplift_enable
	Nova_TFTeaUplift = PQI_DeflamaHealingMistMonk_TFTeaUplift_value
	Nova_TFTReMCheck = PQI_DeflamaHealingMistMonk_TFTReM_enable
	Nova_TFTReM = PQI_DeflamaHealingMistMonk_TFTReM_value
	
	Nova_LifeCocoonCheck = PQI_DeflamaCDMistMonk_LifeCocoon_enable
	Nova_LifeCocoon = PQI_DeflamaCDMistMonk_LifeCocoon_value
	Nova_SpinningCKickCheck = PQI_DeflamaCDMistMonk_VSpinningCKick_enable
	Nova_SpinningCKick = PQI_DeflamaCDMistMonk_VSpinningCKick_value
	Nova_SpinningCKickLimitCheck = PQI_DeflamaCDMistMonk_VSpinningCKickLimit_enable
	Nova_SpinningCKickLimit = PQI_DeflamaCDMistMonk_VSpinningCKickLimit_value
	Nova_RushingJadeWindCheck = PQI_DeflamaCDMistMonk_RushingJadeWind_enable
	Nova_RushingJadeWind = PQI_DeflamaCDMistMonk_RushingJadeWind_value
	Nova_RushingJadeWindLimitCheck = PQI_DeflamaCDMistMonk_RushingJadeWindLimit_enable
	Nova_RushingJadeWindLimit = PQI_DeflamaCDMistMonk_RushingJadeWindLimit_value		
	Nova_RevivalCheck = PQI_DeflamaCDMistMonk_Revival_enable
	Nova_Revival = PQI_DeflamaCDMistMonk_Revival_value
	Nova_RevivalLimitCheck = PQI_DeflamaCDMistMonk_RevivalLimit_enable
	Nova_RevivalLimit = PQI_DeflamaCDMistMonk_RevivalLimit_value		
		
	Nova_SpamRenewingMistCheck = PQI_DeflamaGeneralMistMonk_SpamRenewingMist_enable
	Nova_SpamRenewingMist = PQI_DeflamaGeneralMistMonk_SpamRenewingMist_value	
	Nova_RacialsCheck = PQI_DeflamaGeneralMistMonk_Racials_enable
	Nova_Racials = PQI_DeflamaGeneralMistMonk_Racials_value
	Nova_4xEventsCheck = PQI_DeflamaGeneralMistMonk_4xEvents_enable
	Nova_4xEvents = PQI_DeflamaGeneralMistMonk_4xEvents_value
	Nova_53EventsCheck = PQI_DeflamaGeneralMistMonk_53Events_enable
	Nova_53Events = PQI_DeflamaGeneralMistMonk_53Events_value
	Nova_54EventsCheck = PQI_DeflamaGeneralMistMonk_54Events_enable
	Nova_54Events = PQI_DeflamaGeneralMistMonk_54Events_value	
	Nova_SpecialEvents = PQI_DeflamaGeneralMistMonk_SpecialEvents_enable	
	Nova_NPCMouseoverHeal = PQI_DeflamaGeneralMistMonk_NPCMouseoverHeal_enable
	
	if Nova_LowHP == nil then Nova_LowHP = 80 end
	if Nova_ActualHP == nil or Nova_ActualHP then Nova_ActualHP = false end
	
	-- Hotkeys
	if not PQI_Hotkeys_Functions_Set then
		function PQI_PauseRotation()
			if PQI_DeflamaHealingMistMonk_PauseRotation_enable and PQI:IsHotkeys(PQI_DeflamaHealingMistMonk_PauseRotation_key) then
			return true else return false 
		end	end	
		function PQI_JadeSerpentStatue()
			if PQI_DeflamaHealingMistMonk_JadeSerpentStatue_enable and PQI:IsHotkeys(PQI_DeflamaHealingMistMonk_JadeSerpentStatue_key) then
			return true else return false
		end	end			
		function PQI_HealingSphere()
			if PQI_DeflamaHealingMistMonk_HealingSphere_enable and PQI:IsHotkeys(PQI_DeflamaHealingMistMonk_HealingSphere_key) then
			return true else return false
		end	end	
		function PQI_SpinningCraneKick()
			if PQI_DeflamaHealingMistMonk_SpinningCraneKick_enable and PQI:IsHotkeys(PQI_DeflamaHealingMistMonk_SpinningCraneKick_key) then
			return true else return false
		end	end		
		function PQI_ZenMeditation()
			if PQI_DeflamaHealingMistMonk_ZenMeditation_enable and PQI:IsHotkeys(PQI_DeflamaHealingMistMonk_ZenMeditation_key) then
			return true else return false
		end	end								
	end	
	
	Nova_PauseRotationCheck = PQI_DeflamaHealingMistMonk_PauseRotation_enable
	Nova_JadeSerpentStatueCheck = PQI_DeflamaHealingMistMonk_JadeSerpentStatue_enable
	Nova_HealingSphereCheck = PQI_DeflamaHealingMistMonk_HealingSphere_enable
	Nova_SpinningCraneKickCheck = PQI_DeflamaHealingMistMonk_SpinningCraneKick_enable
	Nova_ZenMeditationCheck = PQI_DeflamaHealingMistMonk_ZenMeditation_enable
	
	DeflamaMistMonk_PauseRotation_key = PQI_PauseRotation()
	DeflamaMistMonk_JadeSerpentStatue_key = PQI_JadeSerpentStatue()
	DeflamaMistMonk_HealingSphere_key = PQI_HealingSphere()
	DeflamaMistMonk_SpinningCraneKick_key = PQI_SpinningCraneKick()
	DeflamaMistMonk_ZenMeditation_key = PQI_ZenMeditation()

	--Set PQI
	if not PQI_DeflamaMistMonk_Set and DeflamaMistMonk_AutoOpenPQIOptions_enable ~= nil then
		RunMacroText(&amp;quot;/PQI show&amp;quot;)
		RunMacroText(&amp;quot;/PQI config show&amp;quot;)
		RunMacroText(&amp;quot;/PQI config width 220&amp;quot;)
		if not DeflamaMistMonk_AutoOpenPQIOptions_enable then
		RunMacroText(&amp;quot;/PQI config hide&amp;quot;) end
		PQI_DeflamaMistMonk_Set = true
	end
end

--PQI is not loading variables instantly any more ?_? need to delay till they are loaded to avoid errors!
if PQI_Variables_Loaded == nil then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>- HEALING ENGINE -</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_54EventsCheck then
	if not UnitDebuffID(&amp;quot;player&amp;quot;,144850) --Test of Reliance
	and not UnitDebuffID(&amp;quot;player&amp;quot;,142861) then --Ancient Miasma
		SheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActualHP, Nova_TargetHeal, Nova_SpecialEvents, Nova_PetHeal)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true
	end
else
	SheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActualHP, Nova_TargetHeal, Nova_SpecialEvents, Nova_PetHeal)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true	
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DPS] Jab</Name><Default>false</Default><SpellID>0</SpellID><Actions>/use 10</Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;)
and PQR_SpellAvailable(100780)
and IsSpellInRange(GetSpellInfo(100780), &amp;quot;target&amp;quot;) == 1
and UnitBuffID(&amp;quot;player&amp;quot;, 137331) then
	if not UnitBuffID(&amp;quot;player&amp;quot;, 139597) then
		CastSpellByName(tostring(GetSpellInfo(100780)),&amp;quot;target&amp;quot;)
	else
		if UnitBuffID(&amp;quot;player&amp;quot;, 139597)
		and UnitPower(&amp;quot;player&amp;quot;, 12) &amp;lt; 1 then
			CastSpellByName(tostring(GetSpellInfo(100780)),&amp;quot;target&amp;quot;)
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DPS] Tiger Palm</Name><Default>false</Default><SpellID>100787</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;)
and not UnitBuffID(&amp;quot;player&amp;quot;, 2825)  
and not UnitBuffID(&amp;quot;player&amp;quot;, 32182) 
and not UnitBuffID(&amp;quot;player&amp;quot;, 80353) 
and IsSpellInRange(GetSpellInfo(100787), &amp;quot;target&amp;quot;) == 1
and not UnitBuffID(&amp;quot;player&amp;quot;, 90355)
and PQR_SpellAvailable(100787) 
and UnitPower(&amp;quot;player&amp;quot;, 12) &amp;gt;= 1 then
	if UnitBuffID(&amp;quot;player&amp;quot;, 139597) 
	or (not UnitBuffID(&amp;quot;player&amp;quot;, 125359) or select(7,UnitBuffID(&amp;quot;player&amp;quot;,125359)) &amp;lt; 3) then
		return true
	else
		if UnitBuffID(&amp;quot;player&amp;quot;, 125359)
		and UnitBuffID(&amp;quot;player&amp;quot;, 127722)
		and 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 35 then
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DPS] Blackout Kick</Name><Default>false</Default><SpellID>100784</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;)
and IsSpellInRange(GetSpellInfo(100784), &amp;quot;target&amp;quot;) == 1
and PQR_SpellAvailable(100784) then
	if UnitPower(&amp;quot;player&amp;quot;, 12) &amp;gt;= 2
	or (not UnitBuffID(&amp;quot;player&amp;quot;, 127722) or select(7,UnitBuffID(&amp;quot;player&amp;quot;,127722)) &amp;lt; 3)  then
		return true
	else 
		if UnitPower(&amp;quot;player&amp;quot;, 12) &amp;gt;= 3 
		and 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 35
		and UnitBuffID(&amp;quot;player&amp;quot;, 125359)
		and UnitBuffID(&amp;quot;player&amp;quot;, 127722) then
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DPS] Crackling Jade Lightning</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 15 
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and UnitPower(&amp;quot;player&amp;quot;, 12) &amp;lt; 4 
and PQR_SpellAvailable(117952)
and not UnitBuffID(&amp;quot;player&amp;quot;, 137331)
and not UnitBuffID(&amp;quot;player&amp;quot;, 139597) then
	CastSpellByName(tostring(GetSpellInfo(117952)),&amp;quot;target&amp;quot;)
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[META] CJL Stop Casting</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if UnitBuffID(&amp;quot;player&amp;quot;, 137331)
or UnitBuffID(&amp;quot;player&amp;quot;, 139597)
and IsSpellInRange(GetSpellInfo(100780))
and (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952))
and 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;gt; 35 then
	SpellStopCasting()
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[BUFF] Legacy of the Emperor</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if not UnitBuffID(&amp;quot;player&amp;quot;,1126)
and not UnitBuffID(&amp;quot;player&amp;quot;,20217)
and not UnitBuffID(&amp;quot;player&amp;quot;,90363)
and not UnitBuffID(&amp;quot;player&amp;quot;,115921) 
and PQR_SpellAvailable(115921)
and IsUsableSpell(115921) 
and not UnitCastingInfo(&amp;quot;player&amp;quot;)
then
	CastSpellByName(tostring(GetSpellInfo(115921)),&amp;quot;player&amp;quot;)
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[DPS] Chi Wave</Name><Default>false</Default><SpellID>115098</SpellID><Actions></Actions><Lua>if PQR_SpellAvailable(115098)
and UnitAffectingCombat(&amp;quot;player&amp;quot;)
and not UnitBuffID(&amp;quot;player&amp;quot;, 139597)
and not UnitBuffID(&amp;quot;player&amp;quot;, 137331) then
	return true
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SPELL] Detox</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_DetoxCheck then
	local function DoNotDispel(unit)
	local DoNotDispel = {
		30108, --Unstable Affliction
		34914, --Vampiric Touch
		}
		for i = 1, #DoNotDispel do
			if UnitDebuff(unit, GetSpellInfo(DoNotDispel[i])) then
				return 1
			else
				return nil
			end
		end
	end

	local unit = {
			&amp;quot;mouseover&amp;quot;,
			&amp;quot;target&amp;quot;,
			&amp;quot;focus&amp;quot;,
			}
	local unit = unit[Nova_Detox]
	for i = 1, 40 do
		local debuff = { UnitDebuff(unit, i) }
		if UnitCanAssist(&amp;quot;player&amp;quot;, unit)
		and debuff[1]
		and not DoNotDispel(unit) then
			if debuff[5] == &amp;quot;Magic&amp;quot;
			or debuff[5] == &amp;quot;Poison&amp;quot;
			or debuff[5] == &amp;quot;Disease&amp;quot; then
				CastSpellByName(115450, unit)
			end
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SPELL] Expel Harm</Name><Default>false</Default><SpellID>115072</SpellID><Actions></Actions><Lua>if UnitAffectingCombat(&amp;quot;player&amp;quot;) 
and not UnitBuffID(&amp;quot;player&amp;quot;, 2825)  
and not UnitBuffID(&amp;quot;player&amp;quot;, 32182) 
and not UnitBuffID(&amp;quot;player&amp;quot;, 80353) 
and not UnitBuffID(&amp;quot;player&amp;quot;, 90355)
and PQR_SpellAvailable(115072)
and not UnitBuffID(&amp;quot;player&amp;quot;, 137331)
and not UnitBuffID(&amp;quot;player&amp;quot;, 139597) then
	if 100 * UnitPower(&amp;quot;player&amp;quot;) / UnitPowerMax(&amp;quot;player&amp;quot;) &amp;lt; 35 then
		return true
	else
		if 100 * UnitHealth(&amp;quot;player&amp;quot;) / UnitHealthMax(&amp;quot;player&amp;quot;) &amp;lt; 90 then
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MISC] 5.4 Events</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_54EventsCheck 
and UnitAffectingCombat(&amp;quot;player&amp;quot;) then
	local boss,bossid = bossid()
	local dispelid = 115450	
	local rangecheckid = 115175	
	local buff = { }
	stopcasting = false
	stopdps = false
	LLdebuff = false
	LLdebuffunit = false		
	if UnitExists(boss) then
		--local _, _, rdifficulty = GetInstanceInfo()
		if bossid == 71515 then --General Nazgrim
			if UnitBuffID(&amp;quot;boss1&amp;quot;, 143593) then --Defensive Stance
				stopdps = true				
			else
				stopdps = false
			end
		elseif bossid == 71995 or bossid == 71996 or bossid == 72000 then --Amalgam of Corruption - Norushen
			if UnitDebuffID(&amp;quot;player&amp;quot;,144850) --Test of Reliance
			then 
				BossSheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActualHP, Nova_TargetHeal, 3, true, rangecheckid)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true
				local buff  = { 144514 } --Lingering Corruption
				RaidDispel(dispelid,buff) 	
			end
		elseif bossid == 71475 or bossid == 71479 or bossid == 71480 then --The Fallen Protectors
			local buff  = { 143434 } --Shadow Word: Bane
			RaidDispel(dispelid,buff) 	
		elseif bossid == 71734 then --Sha of Pride
			if UnitDebuffID(&amp;quot;player&amp;quot;,144359) then
				local buff  = { 144351 } --Mark of Arrogance
				RaidDispel(dispelid,buff) 			
			end
		elseif bossid == 71454 then --Malkorok	
			local buff  = { 142913 } 	
			RaidRangeDispel(dispelid,buff,8) 	
			if UnitDebuffID(&amp;quot;player&amp;quot;,142861) then --Ancient Miasma			
				ShieldSheuronEngine(Nova_Mouseover, Nova_LowHP, Nova_ActualHP, Nova_TargetHeal, Nova_PetHeal)  -- Deactivate Mouseover  ||   At what % Health do we consider someone LowHP  ||  Sort by Actual Health = true					
			end
		elseif bossid == 71161 then --Kil&amp;apos;ruk the Wind-Reaver - Paragons of the Klaxxi
			if UnitDebuffID(&amp;quot;player&amp;quot;,141858) then --Ingenious			
				if not tIngenious or (#tIngenious &amp;gt; 0 and (GetTime() &amp;gt; tIngenious[1].Time + 30)) then
					tIngenious = { }						
					local qTime = GetTime() 
					local lastmax = 0
					local maxunit = &amp;quot;player&amp;quot;		
					local lasttype = &amp;quot;notype&amp;quot;						
					local ClassList = { {&amp;apos;WARRIOR&amp;apos;, 0 }, {&amp;apos;PALADIN&amp;apos;, 0 }, {&amp;apos;HUNTER&amp;apos;, 0 }, {&amp;apos;ROGUE&amp;apos;, 0 }, {&amp;apos;PRIEST&amp;apos;, 0 }, {&amp;apos;DEATHKNIGHT&amp;apos;, 0 }, {&amp;apos;SHAMAN&amp;apos;, 0 }, {&amp;apos;MAGE&amp;apos;, 0 }, {&amp;apos;WARLOCK&amp;apos;, 0 }, {&amp;apos;MONK&amp;apos;, 0 }, {&amp;apos;DRUID&amp;apos;, 0 } }				
					local RaceList = { {&amp;apos;Draenei&amp;apos;, 0 }, {&amp;apos;Gnome&amp;apos;, 0 }, {&amp;apos;Human&amp;apos;, 0 }, {&amp;apos;NightElf&amp;apos;, 0 }, {&amp;apos;Worgen&amp;apos;, 0 }, {&amp;apos;Pandaren&amp;apos;, 0 }, {&amp;apos;BloodElf&amp;apos;, 0 }, {&amp;apos;Goblin&amp;apos;, 0 }, {&amp;apos;Orc&amp;apos;, 0 }, {&amp;apos;Tauren&amp;apos;, 0 }, {&amp;apos;Troll&amp;apos;, 0 }, {&amp;apos;Scourge&amp;apos;, 0 } }
					for i=1,25 do
						local unitCheck = &amp;quot;raid&amp;quot;..i
					    if UnitExists(unitCheck) and UnitIsPlayer(unitCheck) then
					    	local _, unitClass = UnitClass(unitCheck)				    	
					    	local _, unitRace = UnitRace(unitCheck)				    	
					        if unitClass and UnitRace then	
								--Class
								for j=1, #ClassList do
									if unitClass == ClassList[j][1] then
										--PQR_WriteToChat(&amp;quot;Debug1 - Num: &amp;quot; ..ClassList[j][2]..&amp;quot; - Class: &amp;quot; ..ClassList[j][1])
										ClassList[j][2] = ClassList[j][2] + 1
										if ClassList[j][2] &amp;gt; lastmax then
											lastmax = ClassList[j][2]
											maxunit = unitCheck
											lasttype = ClassList[j][1]
										end												
									end		
								end
								--Race
								for j=1, #RaceList do
									if unitRace == RaceList[j][1] then
										--PQR_WriteToChat(&amp;quot;Debug1 - Num: &amp;quot; ..RaceList[j][2]..&amp;quot; - Race: &amp;quot; ..RaceList[j][1])
										RaceList[j][2] = RaceList[j][2] + 1
										if RaceList[j][2] &amp;gt; lastmax then
											lastmax = RaceList[j][2]
											maxunit = unitCheck
											lasttype = RaceList[j][1]
										end												
									end		
								end
					        end			               	
					    end
					end				
					--PQR_WriteToChat(&amp;quot;Debug1 - Unit: &amp;quot; ..maxunit..&amp;quot; - Type: &amp;quot; ..lasttype..&amp;quot; - Total: &amp;quot; ..lastmax..&amp;quot; - Time: &amp;quot; ..qTime)		
					table.insert(tIngenious, { Unit = maxunit, Type = lasttype, Total = lastmax, Time = qTime } )			
					return true								
				else
					if #tIngenious &amp;gt; 0 then			
						if UnitExists(tIngenious[1].Unit) 
						and IsSpellInRange(GetSpellInfo(rangecheckid),tIngenious[1].Unit) == 1
						and CanHeal(tIngenious[1].Unit) then	
			    			TargetUnit(tIngenious[1].Unit) 
			                --Press the ExtraActionButton 
			                RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)                     
			                RunMacroText(&amp;quot;/targetlasttarget&amp;quot;)
			                --PQR_WriteToChat(&amp;quot;Ingenious Name: &amp;quot;..UnitName(tIngenious[1].Unit)..&amp;quot; - Type: &amp;quot;..tIngenious[1].Type..&amp;quot; - Total: &amp;quot;..tIngenious[1].Total..&amp;quot; - Time: &amp;quot;..tIngenious[1].Time)						        					        	   	
						end
					end				
				end   				
			else
				tIngenious = false
			end
		elseif bossid == 71529 then --Thok the Bloodthirsty
			local buff  = { 143791 } --Corrosive Blood
			RaidDispel(dispelid,buff) 
			local DeafeningScreech = GetSpellInfo(143343) --Deafening Screech
			local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(boss) 
			if (bossCasting == DeafeningScreech) then
				stopcasting = true
			end							
		end	
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[MISC] 5.3 Events</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_53EventsCheck then
	local boss,bossid = bossid()
	local dispelid = 115450		
	local buff = { }
	stopcasting = false
	stopdps = false
	LLdebuff = false
	LLdebuffunit = false		
	if UnitExists(boss) then
		--TFT raid
		if bossid == 69134 or bossid == 69131 or bossid == 69078 or bossid == 69132 then --Council of Elders
			local buff  = { 136878, 136857 } 	
			RaidDispel(dispelid,buff) 	
		elseif bossid == 68905 or bossid == 68904 then --Lu&amp;apos;lin 68905, Suen 68904 - Twin Consorts
			local buff  = { 137360 } --Corrupted Healing
			LLdebuff,LLdebuffunit = RaidLLDispel(buff) 			
		elseif bossid == 68476 then --Horridon
			local buff  = { 136708, 136719, 136587, 136710 }
			RaidDispel(dispelid,buff) 
		elseif false and bossid == 70212 or bossid == 70235 or bossid == 70247 then --Flaming Head - Players affected by  Cinders should be quick to run over any existing  Icy Ground void zones, and then move to a safe location (out of the way of the raid) to be dispelled.
			local buff  = { 139822, 139909 } 	
			RaidRangeDispel(dispelid,buff,10) 
		elseif false and bossid == 69427 then --Dark Animus
			local buff  = { 138609 } 	
			RaidDispel(dispelid,buff)
			local InterruptingJolt = GetSpellInfo(138763) --139867 
			local bossCasting,_,_,_,_,castEnd = UnitCastingInfo(boss) 
			if (bossCasting == InterruptingJolt) then
				stopcasting = true
			end				
		--DS raid
		elseif bossid == 53879 then --Blood Corruption: Death
			local buff  = { 106199 } 
			RaidDispel(dispelid,buff)	
		--TeS raid
		elseif bossid == 60585 or bossid == 60583 or bossid == 60586 then --Lightning Prison
			local buff  = { 117436 } 
			RaidDispel(dispelid,buff)
		elseif bossid == 62442 then --Terrorize
			local buff  = { 123011 } 
			SBossDispel(123011,dispelid) 
			--RaidDispel(dispelid,buff)			
		--MSV raid
		elseif bossid == 60051 or bossid == 60047 or bossid == 60043 or bossid == 59915 then --Cobalt Mine Blast
			local buff  = { 116281 } 
			RaidDispel(dispelid,buff)	
		elseif bossid == 60708 then --Meng the Demented
			for i=1, #members do	
				if UnitDebuffID(members[i].Unit, 117708) then --Maddening Shout
					stopdps = true
					break
				end
			end			
		elseif bossid == 60410 then --Closed Circuit
			local buff  = { 117949 } 
			RaidDispel(dispelid,buff)	
		--HoF raid
		elseif bossid == 62837 then --Visions of Demise
			local buff  = { 124863 } 
			RaidDispel(dispelid,buff)		
		end		
		
		if bossid == 62442 then		
			BossDispel(123011,dispelid,boss) --Tsulong, Terrorize 
		end
		
		--MSV raid
		if bossid == 60143 or bossid == 61140 or bossid == 70056 then --not test
			-- Gara&amp;apos;jal the Spiritbinder
			if UnitDebuffID(&amp;quot;player&amp;quot;,116161) then
				local timer = select(7,UnitDebuffID(&amp;quot;player&amp;quot;,116161))
				if timer and timer - GetTime() &amp;lt; 1.5 then
					SpellStopCasting()
					RunMacroText(&amp;quot;/click ExtraActionButton1&amp;quot;)
				end
			end		
		end		
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[CD] Revival</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_RevivalCheck then
	if PQR_SpellAvailable(115310)	
	and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523))	
	and select(2,GetSpellCooldown(115310)) &amp;lt; 2
	and IsUsableSpell(115310) 	
	and not LLdebuff 	
	and UnitAffectingCombat(&amp;quot;player&amp;quot;)
	then
		if AverageHealth(Nova_RevivalLimit) &amp;lt;= Nova_Revival then
			if UnitCastingInfo(&amp;quot;player&amp;quot;) then
				SpellStopCasting()
			end					
			CastSpellByName(tostring(GetSpellInfo(115310)),&amp;quot;player&amp;quot;)					
			return true
		end
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SPELL] Healing Sphere</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>if Nova_HealingSphereCheck then	
	if (DeflamaMistMonk_HealingSphere_key and not GetCurrentKeyBoardFocus()) then
		if not UnitChannelInfo(&amp;quot;player&amp;quot;) 
		and PQR_SpellAvailable(115460)
		and GetSpellCooldown(115460) == 0
		and IsUsableSpell(115460)
		and not UnitCastingInfo(&amp;quot;player&amp;quot;)
		then
		  CastSpellByName(tostring(GetSpellInfo(115460),nil))
		  if SpellIsTargeting() then CameraOrSelectOrMoveStart() CameraOrSelectOrMoveStop() end  
		  return true
		end
	end		
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>True</CancelChannel><SkipUnknown>True</SkipUnknown></Ability><Ability><Name>[SPELL] Uplift</Name><Default>false</Default><SpellID>0</SpellID><Actions></Actions><Lua>--UpliftSmart
if not UnitBuffID(&amp;quot;player&amp;quot;,101546) --Spinning Crane Kick
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(131523)) --Zen Meditation
and not (UnitChannelInfo(&amp;quot;player&amp;quot;) == GetSpellInfo(117952)) --Crackling Jade Lightning
then
	
	local upliftcount=0
	local rmcount=0
	for i=1, #members do
		if UnitBuffID(members[i].Unit,115151,&amp;quot;player&amp;quot;)				
		then 	
			rmcount = rmcount + 1	
			if members[i].HP &amp;lt;= Nova_Uplift then
				upliftcount = upliftcount + 1
				if upliftcount &amp;gt;= Nova_UpliftCount+1 then
					break
				end
			end
		end
	end		
															
	if PQR_SpellAvailable(116670)			
	and Nova_UpliftCheck 
	and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 2 then
		if (upliftcount &amp;gt;= Nova_UpliftCount --Nova_UpliftCount
		and ((select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 2) and (select(3, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt; Nova_LowMana)))
		or (select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 4
		and (upliftcount &amp;gt;= (Nova_UpliftCount-1)))
		or (select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 4
		and UnitBuffID(&amp;quot;player&amp;quot;,137331)) then --Meta gem Lucidity
			if select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;lt; 1 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and (upliftcount &amp;gt;= (Nova_UpliftCount+1))
			and select(2,GetTalentRowSelectionInfo(3)) == 9 then		 		
				CastSpellByName(tostring(GetSpellInfo(115399),nil))	 
					--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Chi Brew then UpLift&amp;quot;)				
			end				
			
			if PQR_SpellAvailable(116680) --Thunder Focus Tea
			and not UnitBuffID(&amp;quot;player&amp;quot;,116680) 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;)
			and select(2,GetSpellCooldown(116680)) &amp;lt; 2 
			and select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 3 
			and ((upliftcount &amp;gt;= Nova_TFTeaUplift and Nova_TFTeaUpliftCheck) 
			or (rmcount &amp;gt;= Nova_TFTReM and Nova_TFTReMCheck)) then
				CastSpellByName(tostring(GetSpellInfo(116680),nil))	 
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Thunder Focus Tea then Uplift - UpliftCount: &amp;quot; ..upliftcount) 
			end						
			
			if select(5, Nova_UnitInfo(&amp;quot;player&amp;quot;)) &amp;gt;= 2 
			and not UnitCastingInfo(&amp;quot;player&amp;quot;) then
				CastSpellByName(tostring(GetSpellInfo(116670),nil))	 
				--PQR_WriteToChat(&amp;quot;\124cFFFF55FFCast Uplift - UpliftCount: &amp;quot; ..upliftcount) 							
				return true
			end
		end			
	end
end</Lua><RecastDelay>0</RecastDelay><Target>Target</Target><CancelChannel>False</CancelChannel><SkipUnknown>True</SkipUnknown></Ability></MONK>